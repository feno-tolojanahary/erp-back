{"version":3,"sources":["../../../src/models/address/address.model.ts"],"sourcesContent":["import { Optional, Model, DataTypes } from \"sequelize\";\r\nimport AddressState from \"./addressState.model\";\r\nimport Country from \"@models/static/country.model\";\r\nimport AddressType from \"@models/static/addressType.model\";\r\nimport sequelize from \"../sequelize\";\r\n\r\n// Entity\r\nexport interface AddressAttributes {\r\n    id: number,\r\n    street: string,\r\n    street2?: string,\r\n    city: string,\r\n    zip?: string,\r\n    typeId: number,\r\n    stateId: number,\r\n    country: string,\r\n    targetId: number | undefined,\r\n    targetType: string\r\n}\r\n\r\n// Creation attribute\r\ninterface AddressCreationAttributes extends Optional<AddressAttributes, 'id' | 'street2' | 'zip'>{}\r\n// interface AddressCreationAttributes extends Optional<AddressAttributes, 'id'>{}\r\n\r\n// Instance\r\nexport interface AddressInstance extends Model<AddressAttributes, AddressCreationAttributes>, AddressAttributes {}\r\n\r\n// Class entity\r\nclass Address extends Model <AddressAttributes, AddressCreationAttributes> implements AddressAttributes {\r\n    declare id: number;\r\n    declare street: string;\r\n    declare street2: string;\r\n    declare city: string;\r\n    declare zip: string;\r\n    declare typeId: number;\r\n    declare stateId: number;\r\n    declare country: string;\r\n    declare targetId: number;\r\n    declare targetType: string;\r\n\r\n    declare readonly createdAt: Date;\r\n    declare readonly updatedAt: Date;\r\n\r\n}\r\n\r\nAddress.init({\r\n    id: {\r\n        type: DataTypes.INTEGER,\r\n        autoIncrement: true,\r\n        primaryKey: true\r\n    },\r\n    street: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false\r\n    },\r\n    street2: {\r\n        type: DataTypes.STRING\r\n    },\r\n    city: {\r\n        type: DataTypes.STRING\r\n    },\r\n    zip: {\r\n        type: DataTypes.STRING\r\n    },\r\n    typeId: {\r\n        type: DataTypes.INTEGER,\r\n        references: {\r\n            model: AddressType,\r\n            key: 'id'\r\n        }\r\n    },\r\n    stateId: {\r\n        type: DataTypes.INTEGER,\r\n        references: {\r\n            model: AddressState,\r\n            key: 'id'\r\n        }\r\n    },\r\n    targetId: {\r\n        type: DataTypes.INTEGER\r\n    },\r\n    targetType: {\r\n        type: DataTypes.STRING\r\n    },\r\n    country: {\r\n        type: DataTypes.STRING\r\n    }\r\n}, {\r\n    sequelize,\r\n    tableName: 'address'\r\n})\r\n\r\n// State's relation\r\n// AddressState.hasMany(Address, { foreignKey: 'stateId' });\r\n// Address.AddressState = Address.belongsTo(AddressState, { foreignKey: 'stateId' });\r\n\r\nexport default Address;"],"names":["Address","Model","init","id","type","DataTypes","INTEGER","autoIncrement","primaryKey","street","STRING","allowNull","street2","city","zip","typeId","references","model","AddressType","key","stateId","AddressState","targetId","targetType","country","sequelize","tableName"],"mappings":"AAAA;;;;+BAgGA,SAAuB;;aAAvB,QAAuB;;2BAhGoB,WAAW;0DAC7B,sBAAsB;yDAEvB,6BAAkC;mDACpC,cAAc;;;;;;AAwBpC,IAAA,AAAMA,OAAO,GAAb,MAAMA,OAAO,SAASC,UAAK,MAAA;CAe1B;AAEDD,OAAO,CAACE,IAAI,CAAC;IACTC,EAAE,EAAE;QACAC,IAAI,EAAEC,UAAS,UAAA,CAACC,OAAO;QACvBC,aAAa,EAAE,IAAI;QACnBC,UAAU,EAAE,IAAI;KACnB;IACDC,MAAM,EAAE;QACJL,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;QACtBC,SAAS,EAAE,KAAK;KACnB;IACDC,OAAO,EAAE;QACLR,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;KACzB;IACDG,IAAI,EAAE;QACFT,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;KACzB;IACDI,GAAG,EAAE;QACDV,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;KACzB;IACDK,MAAM,EAAE;QACJX,IAAI,EAAEC,UAAS,UAAA,CAACC,OAAO;QACvBU,UAAU,EAAE;YACRC,KAAK,EAAEC,iBAAW,QAAA;YAClBC,GAAG,EAAE,IAAI;SACZ;KACJ;IACDC,OAAO,EAAE;QACLhB,IAAI,EAAEC,UAAS,UAAA,CAACC,OAAO;QACvBU,UAAU,EAAE;YACRC,KAAK,EAAEI,kBAAY,QAAA;YACnBF,GAAG,EAAE,IAAI;SACZ;KACJ;IACDG,QAAQ,EAAE;QACNlB,IAAI,EAAEC,UAAS,UAAA,CAACC,OAAO;KAC1B;IACDiB,UAAU,EAAE;QACRnB,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;KACzB;IACDc,OAAO,EAAE;QACLpB,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;KACzB;CACJ,EAAE;IACCe,SAAS,EAATA,WAAS,QAAA;IACTC,SAAS,EAAE,SAAS;CACvB,CAAC;MAMF,QAAuB,GAAR1B,OAAO"}