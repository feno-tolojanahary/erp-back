{"version":3,"sources":["../../src/models/company.model.ts"],"sourcesContent":["import { Model, Optional, DataTypes } from \"sequelize\";\r\nimport Address from \"./address/address.model\";\r\nimport ContactModel from \"./contact.model\";\r\nimport sequelize from \"./sequelize\";\r\n\r\n// Entity\r\nexport interface CompanyAttributes {\r\n    id: number,\r\n    name: string,\r\n    taxID?: string | null | undefined,\r\n    phone?: string | null | undefined,\r\n    mobile?: string | null | undefined,\r\n    website?: string | null | undefined,\r\n    addressId?: number,\r\n    email: string,\r\n    tagId: number,\r\n\r\n    address?: any\r\n}\r\n\r\n// Creation Attribute\r\ninterface CompanyCreationAttributes extends Optional<CompanyAttributes, 'id' | 'taxID' | 'phone' | 'mobile' | 'website'>{}\r\n\r\n// Instance\r\nexport interface CompanyInstance extends Model<CompanyAttributes, CompanyCreationAttributes>, CompanyAttributes {}\r\n\r\n// Class entity\r\nclass Company extends Model<CompanyAttributes, CompanyCreationAttributes> implements CompanyAttributes {\r\n    declare id: number;\r\n    declare name: string;\r\n    declare taxID?: string | null | undefined;\r\n    declare phone?: string | null | undefined;\r\n    declare mobile?: string | null | undefined;\r\n    declare website?: string | null | undefined;\r\n    declare email: string;\r\n    declare tagId: number;\r\n    declare addressId?: number;\r\n\r\n    declare readonly createdAt: Date;\r\n    declare readonly updatedAt: Date;\r\n\r\n    declare address?: number;\r\n\r\n    static Contacts: any;\r\n    static Address: any;\r\n}\r\n\r\nCompany.init({\r\n    id: {\r\n        type: DataTypes.INTEGER,\r\n        autoIncrement: true,\r\n        primaryKey: true\r\n    },\r\n    name: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false\r\n    },\r\n    taxID: {\r\n        type: DataTypes.STRING,\r\n    },\r\n    phone: {\r\n        type: DataTypes.STRING,\r\n    },\r\n    mobile: {\r\n        type: DataTypes.STRING,\r\n    },\r\n    website: {\r\n        type: DataTypes.STRING,\r\n    },\r\n    email: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false\r\n    },\r\n    addressId: {\r\n        type: DataTypes.INTEGER,\r\n        references: {\r\n            model: Address,\r\n            key: 'id'\r\n            \r\n        }\r\n    },\r\n    tagId: {\r\n        type: DataTypes.INTEGER,\r\n        references: {\r\n            model: {\r\n                tableName: 'tags',\r\n                schema: 'public'\r\n            },\r\n            key: 'id'\r\n            \r\n        }\r\n    }\r\n}, {\r\n    tableName: 'companies',\r\n    sequelize\r\n});\r\n\r\n// Contact's association\r\n// Company.hasMany(ContactModel, { foreignKey: 'companyId' });\r\n// ContactModel.belongsTo(Company);\r\n\r\n// Address's association\r\n\r\n// Address.hasOne(Company);\r\n// Company.Address = Company.belongsTo(Address, { as: \"address\" });\r\n\r\nexport default Company; "],"names":["Company","Model","init","id","type","DataTypes","INTEGER","autoIncrement","primaryKey","name","STRING","allowNull","taxID","phone","mobile","website","email","addressId","references","model","Address","key","tagId","tableName","schema","sequelize"],"mappings":"AAAA;;;;+BA0GA,SAAuB;;aAAvB,QAAuB;;2BA1GoB,WAAW;qDAClC,yBAAyB;mDAEvB,aAAa;;;;;;AAwBnC,IAAA,AAAMA,OAAO,GAAb,MAAMA,OAAO,SAASC,UAAK,MAAA;CAkB1B;AAEDD,OAAO,CAACE,IAAI,CAAC;IACTC,EAAE,EAAE;QACAC,IAAI,EAAEC,UAAS,UAAA,CAACC,OAAO;QACvBC,aAAa,EAAE,IAAI;QACnBC,UAAU,EAAE,IAAI;KACnB;IACDC,IAAI,EAAE;QACFL,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;QACtBC,SAAS,EAAE,KAAK;KACnB;IACDC,KAAK,EAAE;QACHR,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;KACzB;IACDG,KAAK,EAAE;QACHT,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;KACzB;IACDI,MAAM,EAAE;QACJV,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;KACzB;IACDK,OAAO,EAAE;QACLX,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;KACzB;IACDM,KAAK,EAAE;QACHZ,IAAI,EAAEC,UAAS,UAAA,CAACK,MAAM;QACtBC,SAAS,EAAE,KAAK;KACnB;IACDM,SAAS,EAAE;QACPb,IAAI,EAAEC,UAAS,UAAA,CAACC,OAAO;QACvBY,UAAU,EAAE;YACRC,KAAK,EAAEC,aAAO,QAAA;YACdC,GAAG,EAAE,IAAI;SAEZ;KACJ;IACDC,KAAK,EAAE;QACHlB,IAAI,EAAEC,UAAS,UAAA,CAACC,OAAO;QACvBY,UAAU,EAAE;YACRC,KAAK,EAAE;gBACHI,SAAS,EAAE,MAAM;gBACjBC,MAAM,EAAE,QAAQ;aACnB;YACDH,GAAG,EAAE,IAAI;SAEZ;KACJ;CACJ,EAAE;IACCE,SAAS,EAAE,WAAW;IACtBE,SAAS,EAATA,WAAS,QAAA;CACZ,CAAC,CAAC;MAWH,QAAuB,GAARzB,OAAO"}