{"version":3,"sources":["../../src/utils/ReaderMigrationSequelize.ts"],"sourcesContent":["// this utils help you to get All Attributes from migrations file\r\n\r\nclass MockQueryInterface {\r\n    attributeTables: any;\r\n    constructor() {\r\n      this.attributeTables = {}\r\n    }\r\n  \r\n    setAttribute(tableName: string, attributes : any) {\r\n      this.attributeTables[tableName] = {\r\n        ...(this.attributeTables[tableName] || {}),\r\n        ...(attributes || {}),\r\n      }\r\n    }\r\n  \r\n    deleteAttribute(tableName: string, attributeName: string) {\r\n      const defTable = this.attributeTables[tableName]\r\n      if (defTable) {\r\n        delete defTable[attributeName]\r\n      }\r\n    }\r\n  \r\n    getAttribute(tableName: string, attributeName: string) {\r\n      const defTable = this.attributeTables[tableName]\r\n      if (defTable) {\r\n        return defTable[attributeName]\r\n      }\r\n  \r\n      return null\r\n    }\r\n  \r\n    createTable(tableName: string, attributes: any) {\r\n      this.setAttribute(tableName, attributes)\r\n    }\r\n  \r\n    addColumn(table: any, key: string, attribute: any) {\r\n      this.setAttribute(table, {\r\n        [key]: attribute,\r\n      })\r\n    }\r\n  \r\n    changeColumn(tableName: string, attributeName: string, dataTypeOrOptions: any, options: any) {\r\n      this.setAttribute(tableName, {\r\n        [attributeName]: dataTypeOrOptions,\r\n      })\r\n    }\r\n  \r\n    removeColumn(tableName: string, attributeName: string) {\r\n      this.deleteAttribute(tableName, attributeName)\r\n    }\r\n  \r\n    renameColumn(tableName: string, attrNameBefore: string, attrNameAfter: string, options: any) {\r\n      const curAttribute = this.getAttribute(tableName, attrNameBefore)\r\n      this.setAttribute(tableName, {\r\n        [attrNameAfter]: curAttribute,\r\n      })\r\n      this.deleteAttribute(tableName, attrNameBefore)\r\n    }\r\n  \r\n    renameTable(before: string, after: string, options: any) {\r\n      this.attributeTables[after] = this.attributeTables[before]\r\n  \r\n      delete this.attributeTables[before]\r\n    }\r\n  \r\n    addConstraint() {\r\n      return this\r\n    }\r\n  }\r\n  \r\n  const fs = require('fs')\r\n  const path = require('path')\r\n  \r\n  function read(sequelize: any, mockQueryInterface: any) {\r\n    const basePath = path.resolve(`sequelize/migrations`)\r\n  \r\n    const files = fs.readdirSync(basePath)\r\n    files.forEach((file: any) => {\r\n      // eslint-disable-next-line global-require,import/no-dynamic-require\r\n      const script = require([basePath, file].join('/'))\r\n      script.up(mockQueryInterface, sequelize)\r\n    })\r\n  }\r\n  \r\n  module.exports = {\r\n    MockQueryInterface,\r\n    read,\r\n  }\r\n  "],"names":["MockQueryInterface","setAttribute","tableName","attributes","attributeTables","deleteAttribute","attributeName","defTable","getAttribute","createTable","addColumn","table","key","attribute","changeColumn","dataTypeOrOptions","options","removeColumn","renameColumn","attrNameBefore","attrNameAfter","curAttribute","renameTable","before","after","addConstraint","constructor","fs","require","path","read","sequelize","mockQueryInterface","basePath","resolve","files","readdirSync","forEach","file","script","join","up","module","exports"],"mappings":"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"}